function setSegmentationGa68DOTATATECallback(~, ~)
%function setSegmentationGa68DOTATATECallback()
%Run Ga68DOTATATE Tumor Segmentation, The tool is called from the main menu.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2023, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by:  Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

    if exist('hObject', 'var')

    DLG_Ga68DOTATATE_PERCENT_X = 380;
    DLG_Ga68DOTATATE_PERCENT_Y = 185;

    dlgGa68DOTATATESegmentation = ...
        dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-DLG_Ga68DOTATATE_PERCENT_X/2) ...
                            (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-DLG_Ga68DOTATATE_PERCENT_Y/2) ...
                            DLG_Ga68DOTATATE_PERCENT_X ...
                            DLG_Ga68DOTATATE_PERCENT_Y ...
                            ],...
               'MenuBar', 'none',...
               'Resize', 'off', ...    
               'NumberTitle','off',...
               'MenuBar', 'none',...
               'Color', viewerBackgroundColor('get'), ...
               'Name', 'Ga68DOTATATE Segmentation',...
               'Toolbar','none'...               
               ); 

%     % Boundary percent of max
% 
%         uicontrol(dlgGa68DOTATATESegmentation,...
%                   'style'   , 'text',...
%                   'Enable'  , 'On',...
%                   'string'  , 'Boundary percent of max',...
%                   'horizontalalignment', 'left',...
%                   'BackgroundColor', viewerBackgroundColor('get'), ...
%                   'ForegroundColor', viewerForegroundColor('get'), ...                   
%                   'position', [20 187 250 20]...
%                   );
% 
%     edtGa68DOTATATEBoundaryPercentOfMaxValue = ...
%         uicontrol(dlgGa68DOTATATESegmentation, ...
%                   'Style'   , 'Edit', ...
%                   'Position', [285 190 75 20], ...
%                   'String'  , num2str(Ga68DOTATATESegmentationBoundaryPercentValue('get')), ...
%                   'Enable'  , 'on', ...
%                   'BackgroundColor', viewerBackgroundColor('get'), ...
%                   'ForegroundColor', viewerForegroundColor('get'), ...
%                   'CallBack', @edtGa68DOTATATEBoundaryPercentOfMaxValueCallback ...
%                   ); 

    % Bone mask threshold

        uicontrol(dlgGa68DOTATATESegmentation,...
                  'style'   , 'text',...
                  'Enable'  , 'On',...
                  'string'  , 'Bone mask threshold (HU)',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'position', [20 137 250 20]...
                  );

    edtGa68DOTATATEBoneMaskThresholdValue = ...
        uicontrol(dlgGa68DOTATATESegmentation, ...
                  'Style'   , 'Edit', ...
                  'Position', [285 140 75 20], ...
                  'String'  , num2str(Ga68DOTATATESegmentationBoneMaskThresholdValue('get')), ...
                  'Enable'  , 'on', ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'CallBack', @edtGa68DOTATATEBoneMaskThresholdValueCallback ...
                  ); 
    % Smallest Contour (ml)

        uicontrol(dlgGa68DOTATATESegmentation,...
                  'style'   , 'text',...
                  'Enable'  , 'On',...
                  'string'  , 'Smallest Contour (ml)',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'position', [20 112 250 20]...
                  );

    edtGa68DOTATATESmalestVoiValue = ...
        uicontrol(dlgGa68DOTATATESegmentation, ...
                  'Style'   , 'Edit', ...
                  'Position', [285 115 75 20], ...
                  'String'  , num2str(Ga68DOTATATESmalestVoiValue('get')), ...
                  'Enable'  , 'on', ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'CallBack', @edtGa68DOTATATESmalestVoiValueCallback ...
                  );        

    % Pixel Edge

        uicontrol(dlgGa68DOTATATESegmentation,...
                  'style'   , 'text',...
                  'Enable'  , 'Inactive',...
                  'string'  , 'Pixel Edge',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'ButtonDownFcn'  , @chkGa68DOTATATEPixelEdgeCallback, ...
                  'position', [40 87 150 20]...
                  );

    chkGa68DOTATATEPixelEdge = ...
        uicontrol(dlgGa68DOTATATESegmentation,...
                  'style'   , 'checkbox',...
                  'enable'  , 'on',...
                  'value'   , pixelEdge('get'),...
                  'position', [20 90 20 20],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'Callback', @chkGa68DOTATATEPixelEdgeCallback...
                  );

    % Normal Liver Treshold Multiplier

        uicontrol(dlgGa68DOTATATESegmentation,...
                  'style'   , 'text',...
                  'Enable'  , 'On',...
                  'string'  , 'Normal Liver Treshold Multiplier',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                   
                  'position', [20 62 250 20]...
                  );

    edtGa68DOTATATENormalLiverTresholdMultiplierValue = ...
        uicontrol(dlgGa68DOTATATESegmentation, ...
                  'Style'   , 'Edit', ...
                  'Position', [285 65 75 20], ...
                  'String'  , num2str(Ga68DOTATATENormalLiverTresholdMultiplierValue('get')), ...
                  'Enable'  , 'on', ...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...
                  'CallBack', @edtGa68DOTATATENormalLiverTresholdMultiplierValueCallback ...
                  );

     % Cancel or Proceed

     uicontrol(dlgGa68DOTATATESegmentation,...
               'String','Cancel',...
               'Position',[285 7 75 25],...
               'BackgroundColor', viewerBackgroundColor('get'), ...
               'ForegroundColor', viewerForegroundColor('get'), ...                
               'Callback', @cancelGa68DOTATATESegmentationCallback...
               );

     uicontrol(dlgGa68DOTATATESegmentation,...
              'String','Continue',...
              'Position',[200 7 75 25],...
              'BackgroundColor', viewerBackgroundColor('get'), ...
              'ForegroundColor', viewerForegroundColor('get'), ...               
              'Callback', @proceedGa68DOTATATESegmentationCallback...
              );    
    else % Execute the segmentation using the default values

         setSegmentationGa68DOTATATE(Ga68DOTATATESegmentationBoneMaskThresholdValue('get'), ...
                                     Ga68DOTATATESmalestVoiValue('get'), ...
                                     pixelEdge('get'), ...
                                     Ga68DOTATATENormalLiverTresholdMultiplierValue('get'), ...
                                     true); 
    
    end

    function edtGa68DOTATATESmalestVoiValueCallback(~, ~)

        dObjectValue = str2double(get(edtGa68DOTATATESmalestVoiValue, 'String'));

        if dObjectValue < 0

            dObjectValue = 0;

            set(edtGa68DOTATATESmalestVoiValue, 'String', num2str(dObjectValue));
        end

        Ga68DOTATATESmalestVoiValue('set', dObjectValue);

    end

    function chkGa68DOTATATEPixelEdgeCallback(hObject, ~)  
                
        bObjectValue = get(chkGa68DOTATATEPixelEdge, 'Value');
        
        if strcmpi(get(hObject, 'Style'), 'text')
            
            set(chkGa68DOTATATEPixelEdge, 'Value', ~bObjectValue);
        end        
        
        bObjectValue = get(chkGa68DOTATATEPixelEdge, 'Value');

        pixelEdge('set', bObjectValue);
        
        % Set contour panel checkbox
        set(chkPixelEdgePtr('get'), 'Value', pixelEdge('get'));
    end

%     function edtGa68DOTATATEBoundaryPercentOfMaxValueCallback(~, ~)     
% 
%         dBoundaryPercent = str2double(get(edtGa68DOTATATEBoundaryPercentOfMaxValue, 'String'));
% 
%         if dBoundaryPercent <= 0
% 
%             dBoundaryPercent = 10;
%             set(edtGa68DOTATATEBoundaryPercentOfMaxValue, 'String', num2str(dBoundaryPercent));
% 
%         elseif dBoundaryPercent >= 100
%             
%             dBoundaryPercent = 10;
%             set(edtGa68DOTATATEBoundaryPercentOfMaxValue, 'String', num2str(dBoundaryPercent));           
%         end
% 
%         Ga68DOTATATESegmentationBoundaryPercentValue('set', dBoundaryPercent);
% 
%     end

    function edtGa68DOTATATEBoneMaskThresholdValueCallback(~, ~)     

        dBoneMaskThreshold = str2double(get(edtGa68DOTATATEBoneMaskThresholdValue, 'String'));

        if dBoneMaskThreshold <= 0

            dBoneMaskThreshold = 100;
            set(edtGa68DOTATATEBoneMaskThresholdValue, 'String', num2str(dBoneMaskThreshold));        
        end

        Ga68DOTATATESegmentationBoneMaskThresholdValue('set', dBoneMaskThreshold);

    end

    function edtGa68DOTATATENormalLiverTresholdMultiplierValueCallback(~, ~)

        dObjectValue = str2double(get(edtGa68DOTATATENormalLiverTresholdMultiplierValue, 'String'));

        if dObjectValue < 0

            dObjectValue = 1;

            set(edtGa68DOTATATENormalLiverTresholdMultiplierValue, 'String', num2str(dObjectValue));
        end

        Ga68DOTATATENormalLiverTresholdMultiplierValue('set', dObjectValue);

    end

    function cancelGa68DOTATATESegmentationCallback(~, ~)   

        delete(dlgGa68DOTATATESegmentation);
    end
    
    function proceedGa68DOTATATESegmentationCallback(~, ~)

        dSmalestVoiValue   = str2double(get(edtGa68DOTATATESmalestVoiValue, 'String'));
        dPixelEdge         = get(chkGa68DOTATATEPixelEdge, 'value');
%         dBoundaryPercent   = str2double(get(edtGa68DOTATATEBoundaryPercentOfMaxValue, 'String'))/100;
        dBoneMaskThreshold = str2double(get(edtGa68DOTATATEBoneMaskThresholdValue, 'String'));
        dNormalLiverTresholdMultiplier = str2double(get(edtGa68DOTATATENormalLiverTresholdMultiplierValue, 'String'));

        delete(dlgGa68DOTATATESegmentation);

        setSegmentationGa68DOTATATE(dBoneMaskThreshold, dSmalestVoiValue, dPixelEdge, dNormalLiverTresholdMultiplier, false); 
    end

end