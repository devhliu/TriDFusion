function importRawCallback(~, ~)
%function importRawCallback()
%Import .raw file tyoe to TriDFusion.
%See TriDFuison.doc (or pdf) for more information about options.
%
%Note: option settings must fit on one line and can contain one semicolon at most.
%Options can be strings, cell arrays of strings, or numerical arrays.
%
%Author: Daniel Lafontaine, lafontad@mskcc.org
%
%Last specifications modified:
%
% Copyright 2020, Daniel Lafontaine, on behalf of the TriDFusion development team.
%
% This file is part of The Triple Dimention Fusion (TriDFusion).
%
% TriDFusion development has been led by: Daniel Lafontaine
%
% TriDFusion is distributed under the terms of the Lesser GNU Public License.
%
%     This version of TriDFusion is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
% TriDFusion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
% without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with TriDFusion.  If not, see <http://www.gnu.org/licenses/>.

     if switchTo3DMode('get')     == true ||  ...
        switchToIsoSurface('get') == true || ...
        switchToMIPMode('get')    == true

         return;
     end

     filter = {'*.raw'};

     sCurrentDir  = viewerRootPath('get');

     sMatFile = [sCurrentDir '/' 'importRawLastUsedDir.mat'];
     % load last data directory
     if exist(sMatFile, 'file')
                                % lastDirMat mat file exists, load it
        load('-mat', sMatFile);
        if exist('importRawLastUsedDir', 'var')
            sCurrentDir = importRawLastUsedDir;
        end
        if sCurrentDir == 0
            sCurrentDir = pwd;
        end
     end

     [sFileName, sPathName] = uigetfile(sprintf('%s%s', char(sCurrentDir), char(filter)), 'Import .raw file');
     if sFileName ~= 0

        try
            importRawLastUsedDir = sPathName;
            save(sMatFile, 'importRawLastUsedDir');
        catch
            progressBar(1 , sprintf('Warning: Cant save file %s', sMatFile));
%            h = msgbox(sprintf('Warning: Cant save file %s', sMatFile), 'Warning');
%                if integrateToBrowser('get') == true
%                    sLogo = './TriDFusion/logo.png';
%                else
%                    sLogo = './logo.png';
%                end

%                javaFrame = get(h, 'JavaFrame');
%                javaFrame.setFigureIcon(javax.swing.ImageIcon(sLogo));
        end        
        
        dlgRawSize = ...
            dialog('Position', [(getMainWindowPosition('xpos')+(getMainWindowSize('xsize')/2)-380/2) ...
                                (getMainWindowPosition('ypos')+(getMainWindowSize('ysize')/2)-120/2) ...
                                380 ...
                                120 ...
                                ],...
                   'Color', viewerBackgroundColor('get'), ...
                   'Name', 'Import .raw file'...
                   );
           
         uicontrol(dlgRawSize,...
                  'style'   , 'text',...
                  'enable'  , 'On',...
                  'string'  , 'Output XYZ Size',...
                  'horizontalalignment', 'left',...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                     
                  'position', [20 62 200 20]...
                  );
              
        xSize = 4024;
        ySize = 2992;
        zSize = 1;
                
        edtVoxelSizeX = ...
            uicontrol(dlgRawSize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(xSize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [130 65 40 20]...
                     );

        edtVoxelSizeY = ...
            uicontrol(dlgRawSize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(ySize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [175 65 40 20]...
                     );

        edtVoxelSizeZ = ...
            uicontrol(dlgRawSize,...
                     'enable'    , 'on',...
                     'style'     , 'edit',...
                     'Background', 'white',...
                     'string'    , num2str(zSize),...
                     'BackgroundColor', viewerBackgroundColor('get'), ...
                     'ForegroundColor', viewerForegroundColor('get'), ...                    
                     'position'  , [220 65 40 20]...
                     );
             
         % Cancel or Proceed

         uicontrol(dlgRawSize,...
                   'String','Cancel',...
                   'Position',[285 7 75 25],...
                   'BackgroundColor', viewerBackgroundColor('get'), ...
                   'ForegroundColor', viewerForegroundColor('get'), ...                  
                   'Callback', @cancelImportRawCallback...
                   );

         uicontrol(dlgRawSize,...
                  'String','Open',...
                  'Position',[200 7 75 25],...
                  'BackgroundColor', viewerBackgroundColor('get'), ...
                  'ForegroundColor', viewerForegroundColor('get'), ...                 
                  'Callback', @okImportRawCallback...
                  );               



     end
     
     function cancelImportRawCallback(~, ~)  

        delete(dlgRawSize);
     end

     function okImportRawCallback(~, ~)   
         
        loadRawFile( sPathName, sFileName, xSize, ySize);
        delete(dlgRawSize);
     end
end
